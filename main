#!/usr/bin/env python3

import json
import os
import shutil
import sys

with open("config.json") as config_json:
    config = json.load(config_json)

dtv_task_id = config["validator_task"]["_id"]
follow_task_id = config["validator_task"]["deps_config"][0]["task"]
group_id = str(config["validator_task"]["_group_id"])
instance_id = config["validator_task"]["instance_id"]
output_id = config["validator_task"]["config"]["_outputs"][0]["id"]

src = "../"+dtv_task_id+"/secondary"
if "SECONDARY_ARCHIVE" in os.environ:
    dest = os.environ["SECONDARY_ARCHIVE"]
else:
    dest = "/tmp"

dest+="/"+group_id+"/"+instance_id+"/"+follow_task_id+"/"+output_id

if not os.path.exists(src):
    print(src+" doesn't exist")
    sys.exit(1)

os.makedirs(dest, exist_ok=True)

def recursive_overwrite(src, dest, ignore=None):
    if os.path.isdir(src):
        if not os.path.isdir(dest):
            os.makedirs(dest)
        files = os.listdir(src)
        if ignore is not None:
            ignored = ignore(src, files)
        else:
            ignored = set()
        for f in files:
            if f not in ignored:
                recursive_overwrite(os.path.join(src, f),
                                    os.path.join(dest, f),
                                    ignore)
    else:
        shutil.copyfile(src, dest)

#if os.path.exists(dest):
#    print(dest+" already exists - removing first")
#    shutil.rmtree(dest) 
#
print("src:%s dest:%s" % (src, dest))
#shutil.copytree(src, dest+"/secondary")
recursive_overwrite(src, dest+"/secondary")


